version: "3.9"
services:
  pgsql:
    image: postgres:latest
    container_name: pgsql
    restart: on-failure
    networks:
      - l0-services
    volumes:
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - ./data/postgresql:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: "${PG_USER_ADMIN}"
      POSTGRES_PASSWORD: "${PG_PASSWORD_ADMIN}"
      POSTGRES_DB: "${PG_DATABASE}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "${PG_PORT}:${PG_PORT}"

  nats-streaming:
    image: "nats-streaming:latest"
    container_name: nats-streaming
    depends_on:
      - pgsql
    restart: on-failure
    networks:
      - l0-services
    volumes:
      - ./data/nats_data:/var/lib/nats-streaming/data
    ports:
      - "${NATS_PORT}:${NATS_PORT}"
      - "${NATS_PORT_HTTP}:${NATS_PORT_HTTP}"
    command: "--cluster_id ${NATS_CLUSTER_ID} --http_port ${NATS_PORT_HTTP} -store sql -sql_driver postgres -sql_source \"user=ns_user password=ns_user host=pgsql port=${PG_PORT} dbname=service readTimeout=5s writeTimeout=5s sslmode=disable\""

  services:
    container_name: services
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - pgsql
      - nats-streaming
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    networks:
      - l0-services

networks:
  l0-services:
    driver: bridge
